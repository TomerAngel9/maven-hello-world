# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#                
#        
#

name: Java CI\CD with Maven - Build Upload_artifact Download_artifact DockerBuild DockerPush DockerRun

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env: 
      projectversion: 1.0.1
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Build Application and Set new version inscrease +1 
      run: |
        cd my-app
        mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit
        mvn -B package
        MVN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo $MVN_VERSION
        java -cp target/classes com.mycompany.app.App
        mkdir artifact-app && cp target/*.jar artifact-app
        
    - name: Publish to Artifact
      uses: actions/upload-artifact@v2
      with:
        name: github-actions-artifact
        path: my-app/artifact-app
  
  
    - name: Download from Artifact
      uses: actions/download-artifact@v3
      with:
        name: github-actions-artifact
        path: target/
      
      
    - name: Build a Dockerfile
      run: |
        cd my-app
        docker build -t my-app-tomerangel:$MVN_VERSION-SNAPSHOT .
      
      
    - name: Push Image to DockerHub
      run: |
        docker login -u ${{ secrets.USER_NAME }} -p ${{ secrets.USER_PASS }}
        docker tag my-app-tomerangel:$MVN_VERSION-SNAPSHOT 102030102030/my-app-tomerangel:$MVN_VERSION
        docker push 102030102030/my-app-tomerangel:$MVN_VERSION
        
        
    - name: Run a Docker Container :) DONE!
      run: |
        docker run -d -p 8080:8080 --name tomerapplicationmaven 102030102030/my-app-tomerangel:$MVN_VERSION
      
